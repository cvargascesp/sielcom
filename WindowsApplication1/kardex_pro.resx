<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        m6gPkzSbQ/BvelRVf+OTG3QAAAAASUVORK5CYII=
</value>
  </data>
</root>