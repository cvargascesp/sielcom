<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>